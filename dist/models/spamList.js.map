{"version":3,"sources":["../../src/models/spamList.js"],"names":["sequelize","DataTypes","SpamList","define","email","STRING","timestamps","freezeTableName","hooks","beforeCreate","spamData","Promise","resolve","reject","findOne","where","then"],"mappings":";;;;;;kBAAe,UAASA,SAAT,EAAoBC,SAApB,EAA+B;AAC1C,QAAMC,WAAWF,UAAUG,MAAV,CAAiB,UAAjB,EAA6B;AAC1CC,eAAOH,UAAUI;AADyB,KAA7B,EAEd;AACCC,oBAAY,IADb;AAECC,yBAAiB,IAFlB;AAGCC,eAAO;AACHC,0BAAc,sBAASC,QAAT,EAAmB;AAAA;;AAC7B,uBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,0BAAKC,OAAL,CAAa,EAAEC,OAAO,EAAEX,OAAOM,SAASN,KAAlB,EAAT,EAAb,EACKY,IADL,CACU,UAACZ,KAAD,EAAW;AACb,4BAAIA,KAAJ,EAAW;AACPS,mCAAO,0BAAP;AACH,yBAFD,MAEO;AACHD;AACH;AACJ,qBAPL;AAQH,iBATM,CAAP;AAUH;AAZE;AAHR,KAFc,CAAjB;;AAqBA,WAAOV,QAAP;AACH,C","file":"spamList.js","sourcesContent":["export default function(sequelize, DataTypes) {\n    const SpamList = sequelize.define(\"SpamList\", {\n        email: DataTypes.STRING\n    }, {\n        timestamps: true,\n        freezeTableName: true,\n        hooks: {\n            beforeCreate: function(spamData) {\n                return new Promise((resolve, reject) => {\n                    this.findOne({ where: { email: spamData.email } })\n                        .then((email) => {\n                            if (email) {\n                                reject(\"contact is Already Added\");\n                            } else {\n                                resolve();\n                            }\n                        });\n                });\n            }\n        }\n    });\n\n    return SpamList;\n}"]}