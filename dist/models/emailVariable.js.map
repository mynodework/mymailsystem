{"version":3,"sources":["../../src/models/emailVariable.js"],"names":["sequelize","DataTypes","Variable","define","variableCode","STRING","variableValue","TEXT","timestamps","freezeTableName","hooks","beforeCreate","variable","Promise","resolve","reject","findOne","where","then","email"],"mappings":";;;;;;kBAAe,UAASA,SAAT,EAAoBC,SAApB,EAA+B;AAC1C,QAAMC,WAAWF,UAAUG,MAAV,CAAiB,cAAjB,EAAiC;AAC9CC,sBAAcH,UAAUI,MADsB;AAE9CC,uBAAeL,UAAUM,IAAV,CAAe,MAAf;AAF+B,KAAjC,EAGd;AACCC,oBAAY,IADb;AAECC,yBAAiB,IAFlB;AAGCC,eAAO;AACHC,0BAAc,sBAASC,QAAT,EAAmB;AAAA;;AAC7B,uBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,0BAAKC,OAAL,CAAa,EAAEC,OAAO,EAAEb,cAAcQ,SAASR,YAAzB,EAAT,EAAb,EACKc,IADL,CACU,UAACC,KAAD,EAAW;AACb,4BAAIA,KAAJ,EAAW;AACPJ,mCAAO,2BAAP;AACH,yBAFD,MAEO;AACHD;AACH;AACJ,qBAPL;AAQH,iBATM,CAAP;AAUH;AAZE;AAHR,KAHc,CAAjB;AAqBA,WAAOZ,QAAP;AACH,C","file":"emailVariable.js","sourcesContent":["export default function(sequelize, DataTypes) {\n    const Variable = sequelize.define(\"UserVariable\", {\n        variableCode: DataTypes.STRING,\n        variableValue: DataTypes.TEXT('long'),\n    }, {\n        timestamps: true,\n        freezeTableName: true,\n        hooks: {\n            beforeCreate: function(variable) {\n                return new Promise((resolve, reject) => {\n                    this.findOne({ where: { variableCode: variable.variableCode } })\n                        .then((email) => {\n                            if (email) {\n                                reject(\"Variable is Already Added\");\n                            } else {\n                                resolve();\n                            }\n                        });\n                });\n            }\n        }\n    });\n    return Variable;\n}"]}