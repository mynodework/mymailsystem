{"version":3,"sources":["../../src/controllers/exams.js"],"names":["exams","add_questions","req","res","next","body","user","email","job_profile","parseInt","provideQuestions","checkBody","getValidationResult","then","saveQuestion","examQuestions","data","handleSuccessResponse","err","handleErrorResponse","catch","bind","get_all_questions","params","getAllQuestions","getQuestionById","get_one_question","questionId","update_questions","updateQuestion","delete_questions","deleteQuestion","getJobprofiles","findOne","fb_id","tag_data","getJobProfile","examResult","provideResult","exam_result","candidateResult","show_exam_result","provideShowResult","showExamResult","verify_otp","ProvideVerifyOTP","verifyOTP","examSubjects","provideExamSubject","_db","examSubject","exam_subject","getExamSubjects","findAll","attributes","getQuestions","addCandidate","addNewCandidate","create","getPendingCandidate","find","candidate_status","response","getCandidateResult","candidate_exam_result","approveCandidate","approve_candidate","controller"],"mappings":"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","file":"exams.js","sourcesContent":["import BaseAPIController from \"./BaseAPIController\";\nimport exam from \"../service/exams\";\nimport examProvider from \"../providers/examsProvider\";\n\n\nexport class exams extends BaseAPIController {\n    add_questions = (req, res, next) => {\n        req.body.user = req.user.email\n        req.body.job_profile = parseInt(req.body.job_profile)\n        examProvider.provideQuestions(req.checkBody, req.body, req.getValidationResult())\n            .then((body) => {\n                exam.saveQuestion(req.examQuestions, body)\n                    .then((data) => {\n                        this.handleSuccessResponse(req, res, next, data)\n                    }, (err) => {\n                        this.handleErrorResponse(res, err, next)\n                    })\n            }).catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    get_all_questions = (req, res, next) => {\n        var job_profile = parseInt(req.params.job_profile)\n        exam.getAllQuestions(req.examQuestions, job_profile, false)\n            .then((data) => { this.handleSuccessResponse(req, res, next, data) })\n            .catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    getQuestionById = (req, res, next) => {\n        exam.get_one_question(req.examQuestions, req.params.questionId)\n            .then((data) => { this.handleSuccessResponse(req, res, next, data) })\n            .catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    update_questions = (req, res, next) => {\n        exam.updateQuestion(req.examQuestions, req.body, req.params.questionId)\n            .then((data) => { this.handleSuccessResponse(req, res, next, data) })\n            .catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    delete_questions = (req, res, next) => {\n        exam.deleteQuestion(req.examQuestions, req.params.questionId)\n            .then((data) => { this.handleSuccessResponse(req, res, next, data) })\n            .catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    getJobprofiles = (req, res, next) => {\n        req.email.findOne({ fb_id: req.body.fb_id }, { \"tag_id\": 1 }).then((tag_data) => {\n            exam.getJobProfile(tag_data).then((data) => {\n                this.handleSuccessResponse(req, res, next, data)\n            })\n        }).catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    examResult = (req, res, next) => {\n        examProvider.provideResult(req.checkBody, req.body, req.getValidationResult())\n            .then((body) => {\n                exam.exam_result(req.examQuestions, req.email, req.candidateResult, body)\n                    .then((data) => {\n                        this.handleSuccessResponse(req, res, next, data)\n                    }, (err) => {\n                        this.handleErrorResponse(res, err, next)\n                    })\n            }).catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    show_exam_result = (req, res, next) => {\n        examProvider.provideShowResult(req.checkBody, req.body, req.getValidationResult()).then((body) => {\n            exam.showExamResult(req.email, req.params, req.body).then((data) => {\n                this.handleSuccessResponse(req, res, next, data)\n            }, (err) => {\n                this.handleErrorResponse(res, err, next)\n            })\n        }).catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    verify_otp = (req, res, next) => {\n        examProvider.ProvideVerifyOTP(req.checkBody, req.body, req.getValidationResult()).then((body) => {\n            exam.verifyOTP(body).then((data) => {\n                this.handleSuccessResponse(req, res, next, data)\n            }, (err) => {\n                this.handleErrorResponse(res, err, next)\n            })\n        }).catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    examSubjects = (req, res, next) => {\n        examProvider.provideExamSubject(req.checkBody, req.body, req.getValidationResult()).then((body) => {\n            this._db.examSubject.exam_subject(body).then((data) => {\n                this.handleSuccessResponse(req, res, next, data)\n            }, (err) => {\n                this.handleErrorResponse(res, err, next)\n            })\n        }).catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    getExamSubjects = (req, res, next) => {\n        this._db.examSubject.findAll({ attributes: ['id', 'exam_subject'] }).then((data) => {\n            this.handleSuccessResponse(req, res, next, data)\n        }).catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    getQuestions = (req, res, next) => {\n        var job_profile = parseInt(req.params.job_profile)\n        exam.getAllQuestions(req.examQuestions, job_profile, true)\n            .then((data) => { this.handleSuccessResponse(req, res, next, data) })\n            .catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    addCandidate = (req, res, next) => {\n        examProvider.addNewCandidate(req.checkBody, req.body, req.getValidationResult()).then((body) => {\n            req.email.create(body).then((data) => {\n                this.handleSuccessResponse(req, res, next, data)\n            }, (err) => {\n                this.handleErrorResponse(res, err, next)\n            })\n        }).catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    getPendingCandidate = (req, res, next) => {\n        req.email.find({ candidate_status: false }, { \"candidate_status\": 1, \"from\": 1, \"sender_mail\": 1, \"date\": 1, \"fb_id\": 1 }).then((response) => {\n            this.handleSuccessResponse(req, res, next, response)\n        }).catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    getCandidateResult = (req, res, next) => {\n        exam.candidate_exam_result(req.examQuestions, req.candidateResult, req.body).then((data) => {\n            this.handleSuccessResponse(req, res, next, data)\n        }).catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    approveCandidate = (req, res, next) => {\n        examProvider.approveCandidate(req.checkBody, req.body, req.getValidationResult()).then((body) => {\n            exam.approve_candidate(req.email, body).then((data) => {\n                this.handleSuccessResponse(req, res, next, data)\n            }, (err) => {\n                this.handleErrorResponse(res, err, next)\n            })\n        }).catch(this.handleErrorResponse.bind(null, res));\n    }\n}\n\nconst controller = new exams();\nexport default controller;"]}