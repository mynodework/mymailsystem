{"version":3,"sources":["../../src/controllers/inboxContent.js"],"names":["inboxContent","inbox","req","res","next","response","validateParam","params","then","page","parseInt","page_no","email","find","sort","date","skip","emailLimit","limit","fetched","push","emailFetch","Tag","findAll","data","console","log","handleSuccessResponse","err","handleErrorResponse","inboxContents"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEaA,Y,WAAAA,Y;;;;;;;;;;;;;;sMAGTC,K,GAAQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxB,gBAAIC,WAAW,EAAf;AACA,mCAAaC,aAAb,CAA2BJ,IAAIK,MAA/B,EAAuCC,IAAvC,CAA4C,UAACD,MAAD,EAAY;AACpD,oBAAIE,OAAKC,SAASH,OAAOI,OAAhB,IAAyB,CAAlC;AACAT,oBAAIU,KAAJ,CAAUC,IAAV,CAAe,EAAf,EAAkB,EAAE,OAAO,CAAT,EAAY,QAAQ,CAApB,EAAuB,cAAc,CAArC,EAAwC,OAAO,CAA/C,EAAkD,2BAA2B,CAA7E,EAAgF,QAAQ,CAAxF,EAA2F,eAAe,CAA1G,EAA6G,WAAW,CAAxH,EAA2H,UAAU,CAArI,EAAwI,cAAc,CAAtJ,EAAyJ,UAAU,CAAnK,EAAsK,iBAAiB,CAAvL,EAA0L,eAAe,CAAzM,EAA4M,aAAa,CAAzN,EAA4N,SAAS,CAArO,EAAlB,EAA4P,EAAEC,MAAM,EAAEC,MAAM,CAAC,CAAT,EAAR,EAA5P,EAAoRC,IAApR,CAAyRP,OAAOF,OAAOU,UAAvS,EAAmTC,KAAnT,CAAyTR,SAASH,OAAOU,UAAhB,CAAzT,EAAsVT,IAAtV,CAA2V,UAACW,OAAD,EAAa;AAChWd,6BAASe,IAAT,CAAc,EAAEC,YAAYF,OAAd,EAAd;AACA,iCAAGG,GAAH,CAAOC,OAAP,GAAiBf,IAAjB,CAAsB,UAACgB,IAAD,EAAU;AAC5BnB,iCAASe,IAAT,CAAc,EAAEE,KAAKE,IAAP,EAAd;AACAC,gCAAQC,GAAR,CAAYrB,QAAZ;AACA,8BAAKsB,qBAAL,CAA2BzB,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CC,QAA3C;AACH,qBAJD,EAIG,UAACuB,GAAD,EAAS;AAAE,8BAAKC,mBAAL,CAAyB,IAAzB,EAA+BD,GAA/B;AAAqC,qBAJnD;AAKP,iBAPD,EAOG,UAACA,GAAD,EAAS;AAAE,0BAAKC,mBAAL,CAAyB,IAAzB,EAA+BD,GAA/B;AAAqC,iBAPnD;AAQH,aAVD,EAUG,UAACA,GAAD,EAAS;AAAE,sBAAKC,mBAAL,CAAyB,IAAzB,EAA+BD,GAA/B;AAAqC,aAVnD;AAWH,S;;;AAdD;;;;;;AAiBJ,IAAME,gBAAgB,IAAI9B,YAAJ,EAAtB;kBACe8B,a","file":"inboxContent.js","sourcesContent":["import BaseAPIController from \"./BaseAPIController\";\nimport UserProvider from \"../providers/UserProvider.js\";\nimport constant from \"../models/constant\";\nimport email_process from \"../mongodb/emailprocess\";\nimport db from \"../db\";\n\nexport class inboxContent extends BaseAPIController {\n\n    /* Controller for new  Inbox content  */\n    inbox = (req, res, next) => {\n        let response = [];\n        UserProvider.validateParam(req.params).then((params) => {\n            let page=parseInt(params.page_no)-1;\n            req.email.find({},{ \"_id\": 1, \"date\": 1, \"email_date\": 1, \"uid\": 1, \"is_automatic_email_send\": 1, \"from\": 1, \"sender_mail\": 1, \"subject\": 1, \"unread\": 1, \"attachment\": 1, \"tag_id\": 1, \"is_attachment\": 1, \"default_tag\": 1, \"mobile_no\": 1, \"notes\": 1 }, { sort: { date: -1 } }).skip(page * params.emailLimit).limit(parseInt(params.emailLimit)).then((fetched) => {\n                    response.push({ emailFetch: fetched })\n                    db.Tag.findAll().then((data) => {\n                        response.push({ Tag: data })\n                        console.log(response)\n                        this.handleSuccessResponse(req, res, next, response)\n                    }, (err) => { this.handleErrorResponse(null, err) })\n            }, (err) => { this.handleErrorResponse(null, err) })\n        }, (err) => { this.handleErrorResponse(null, err) })\n    }\n}\n\nconst inboxContents = new inboxContent();\nexport default inboxContents;"]}