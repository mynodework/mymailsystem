{"version":3,"sources":["../../src/service/sendEmailToNotViewed.js"],"names":["module","exports","sendEmailToNotViewed","smtp","email","candidate","Promise","resolve","reject","tracking_id","Math","random","toString","substr","html","get","base_track_url","mailer","createTransport","host","smtp_server","port","parseInt","server_port","auth","user","username","pass","password","sendMail","from","to","subject","error","response","message","status","email_response","body","close"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEAA,OAAOC,OAAP,GAAiB;AACbC,0BAAsB,8BAASC,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,EAAiC;AACnD,eAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gBAAIC,cAAcL,MAAMA,KAAN,GAAcM,KAAKC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CAAhC;AACA,gBAAIC,OAAOT,UAAUU,GAAV,CAAc,MAAd,qBAAqC,0BAAWC,cAAhD,SAAkEZ,MAAMA,KAAxE,SAAiFK,WAAjF,SAAX;AACA,gBAAIQ,SAAS,qBAAWC,eAAX,CAA2B,uCAAc;AAClDC,sBAAMhB,KAAKiB,WADuC;AAElDC,sBAAMC,SAASnB,KAAKoB,WAAd,CAF4C;AAGlDC,sBAAM;AACFC,0BAAMtB,KAAKuB,QADT;AAEFC,0BAAMxB,KAAKyB;AAFT;AAH4C,aAAd,CAA3B,CAAb;;AASAX,mBAAOY,QAAP,CAAgB;AACZC,sBAAM3B,KAAKC,KADC;AAEZ2B,oBAAI3B,MAAMA,KAFE;AAGZ4B,yBAAS3B,UAAUU,GAAV,CAAc,SAAd,CAHG;AAIZD,sBAAMA;AAJM,aAAhB,EAKG,UAACmB,KAAD,EAAQC,QAAR,EAAqB;AACpB,oBAAID,KAAJ,EAAW;AACPzB,2BAAO,0BAAP;AACH,iBAFD,MAEO;AACHD,4BAAQ,EAAE4B,SAAS,4BAAX,EAAyCC,QAAQ,CAAjD,EAAoDC,gBAAgBH,QAApE,EAA8EF,SAAS3B,UAAUU,GAAV,CAAc,SAAd,CAAvF,EAAiHuB,MAAMjC,UAAUU,GAAV,CAAc,MAAd,CAAvH,EAA8IN,aAAaA,WAA3J,EAAR;AACH;AACDQ,uBAAOsB,KAAP;AACH,aAZD;AAaH,SAzBM,CAAP;AA0BH;AA5BY,CAAjB","file":"sendEmailToNotViewed.js","sourcesContent":["import nodemailer from \"nodemailer\";\nimport smtpTransport from \"nodemailer-smtp-transport\";\nimport constant from \"../models/constant\";\n\nmodule.exports = {\n    sendEmailToNotViewed: function(smtp, email, candidate) {\n        return new Promise((resolve, reject) => {\n            let tracking_id = email.email + Math.random().toString(36).substr(2, 9)\n            let html = candidate.get('body') + `<img src=\"${constant().base_track_url}/${email.email}/${tracking_id}\">`;\n            let mailer = nodemailer.createTransport(smtpTransport({\n                host: smtp.smtp_server,\n                port: parseInt(smtp.server_port),\n                auth: {\n                    user: smtp.username,\n                    pass: smtp.password\n                }\n            }));\n\n            mailer.sendMail({\n                from: smtp.email,\n                to: email.email,\n                subject: candidate.get('subject'),\n                html: html\n            }, (error, response) => {\n                if (error) {\n                    reject(\"Invalid Smtp Information\");\n                } else {\n                    resolve({ message: \"messsage send successfully\", status: 1, email_response: response, subject: candidate.get('subject'), body: candidate.get('body'), tracking_id: tracking_id });\n                }\n                mailer.close();\n            });\n        })\n    }\n}"]}